(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@astuanax/funmatrix"), require("fun.js"));
	else if(typeof define === 'function' && define.amd)
		define("@astuanax/funml", ["@astuanax/funmatrix", "fun.js"], factory);
	else if(typeof exports === 'object')
		exports["@astuanax/funml"] = factory(require("@astuanax/funmatrix"), require("fun.js"));
	else
		root["@astuanax/funml"] = factory(root["@astuanax/funmatrix"], root["fun.js"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__astuanax_funmatrix__, __WEBPACK_EXTERNAL_MODULE_fun_js__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ActivationFunction.js":
/*!***********************************!*\
  !*** ./src/ActivationFunction.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ActivationFunction; });
var cov_27wfjxq48z=function(){var path="/Volumes/BigOne/github/funml/src/ActivationFunction.js",hash="ddbc0ffc9ada184cbaa1a439bf720238b516a2dc",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Volumes/BigOne/github/funml/src/ActivationFunction.js",statementMap:{"0":{start:{line:1,column:50},end:{line:1,column:151}},"1":{start:{line:1,column:92},end:{line:1,column:149}},"2":{start:{line:8,column:25},end:{line:13,column:1}},"3":{start:{line:9,column:2},end:{line:9,column:44}},"4":{start:{line:11,column:2},end:{line:11,column:19}},"5":{start:{line:12,column:2},end:{line:12,column:21}}},fnMap:{"0":{name:"_classCallCheck",decl:{start:{line:1,column:9},end:{line:1,column:24}},loc:{start:{line:1,column:48},end:{line:1,column:153}},line:1},"1":{name:"ActivationFunction",decl:{start:{line:8,column:34},end:{line:8,column:52}},loc:{start:{line:8,column:66},end:{line:13,column:1}},line:8}},branchMap:{"0":{loc:{start:{line:1,column:50},end:{line:1,column:151}},type:"if",locations:[{start:{line:1,column:50},end:{line:1,column:151}},{start:{line:1,column:50},end:{line:1,column:151}}],line:1}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{"0":0,"1":0},b:{"0":[0,0]},inputSourceMap:{version:3,sources:["/Volumes/BigOne/github/funml/src/ActivationFunction.js"],names:["ActivationFunction","func","dfunc"],mappings:";;AAAA;;;;;IAKqBA,kB,GACnB,4BAAaC,IAAb,EAAmBC,KAAnB,EAA0B;AAAA;;AACxB,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKC,KAAL,GAAaA,KAAb;AACD,C;;SAJkBF,kB",sourcesContent:["/**\n * @class ActivationFunction\n * @param func\n * @param dfunc\n */\nexport default class ActivationFunction {\n  constructor (func, dfunc) {\n    this.func = func\n    this.dfunc = dfunc\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();function _classCallCheck(instance,Constructor){cov_27wfjxq48z.f[0]++;cov_27wfjxq48z.s[0]++;if(!(instance instanceof Constructor)){cov_27wfjxq48z.b[0][0]++;cov_27wfjxq48z.s[1]++;throw new TypeError("Cannot call a class as a function");}else{cov_27wfjxq48z.b[0][1]++;}}cov_27wfjxq48z.s[2]++;var ActivationFunction=function ActivationFunction(func,dfunc){cov_27wfjxq48z.f[1]++;cov_27wfjxq48z.s[3]++;_classCallCheck(this,ActivationFunction);cov_27wfjxq48z.s[4]++;this.func=func;cov_27wfjxq48z.s[5]++;this.dfunc=dfunc;};

/***/ }),

/***/ "./src/DecisionTree.js":
/*!*****************************!*\
  !*** ./src/DecisionTree.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @astuanax/funmatrix */ "@astuanax/funmatrix");
/* harmony import */ var _astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _util_entropy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/entropy */ "./src/util/entropy.js");
var cov_1e3gf5jokt=function(){var path='/Volumes/BigOne/github/funml/src/DecisionTree.js',hash='f34cdb90963d939a81ee273e39ad920338f435b3',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/DecisionTree.js',statementMap:{'0':{start:{line:1,column:50},end:{line:1,column:151}},'1':{start:{line:1,column:92},end:{line:1,column:149}},'2':{start:{line:6,column:11},end:{line:14,column:1}},'3':{start:{line:7,column:2},end:{line:7,column:30}},'4':{start:{line:9,column:2},end:{line:9,column:23}},'5':{start:{line:10,column:2},end:{line:10,column:20}},'6':{start:{line:11,column:2},end:{line:11,column:19}},'7':{start:{line:12,column:2},end:{line:12,column:21}},'8':{start:{line:13,column:2},end:{line:13,column:31}},'9':{start:{line:16,column:19},end:{line:23,column:1}},'10':{start:{line:17,column:21},end:{line:17,column:96}},'11':{start:{line:19,column:2},end:{line:19,column:38}},'12':{start:{line:21,column:2},end:{line:21,column:30}},'13':{start:{line:22,column:2},end:{line:22,column:35}},'14':{start:{line:25,column:0},end:{line:29,column:2}},'15':{start:{line:26,column:2},end:{line:28,column:5}},'16':{start:{line:27,column:4},end:{line:27,column:20}},'17':{start:{line:31,column:0},end:{line:61,column:2}},'18':{start:{line:34,column:2},end:{line:44,column:3}},'19':{start:{line:36,column:4},end:{line:38,column:6}},'20':{start:{line:37,column:6},end:{line:37,column:26}},'21':{start:{line:41,column:4},end:{line:43,column:6}},'22':{start:{line:42,column:6},end:{line:42,column:25}},'23':{start:{line:46,column:13},end:{line:52,column:4}},'24':{start:{line:47,column:4},end:{line:49,column:5}},'25':{start:{line:48,column:6},end:{line:48,column:18}},'26':{start:{line:51,column:4},end:{line:51,column:15}},'27':{start:{line:53,column:14},end:{line:59,column:4}},'28':{start:{line:54,column:4},end:{line:56,column:5}},'29':{start:{line:55,column:6},end:{line:55,column:18}},'30':{start:{line:58,column:4},end:{line:58,column:15}},'31':{start:{line:60,column:2},end:{line:60,column:23}},'32':{start:{line:63,column:0},end:{line:121,column:2}},'33':{start:{line:64,column:14},end:{line:64,column:18}},'34':{start:{line:66,column:13},end:{line:66,column:90}},'35':{start:{line:68,column:2},end:{line:70,column:3}},'36':{start:{line:69,column:4},end:{line:69,column:22}},'37':{start:{line:72,column:14},end:{line:72,column:42}},'38':{start:{line:74,column:17},end:{line:74,column:20}},'39':{start:{line:75,column:22},end:{line:75,column:24}},'40':{start:{line:76,column:17},end:{line:76,column:19}},'41':{start:{line:77,column:20},end:{line:77,column:43}},'42':{start:{line:79,column:14},end:{line:99,column:3}},'43':{start:{line:80,column:23},end:{line:80,column:55}},'44':{start:{line:82,column:4},end:{line:98,column:7}},'45':{start:{line:83,column:24},end:{line:83,column:51}},'46':{start:{line:85,column:14},end:{line:85,column:55}},'47':{start:{line:86,column:6},end:{line:86,column:26}},'48':{start:{line:88,column:20},end:{line:88,column:59}},'49':{start:{line:90,column:17},end:{line:90,column:56}},'50':{start:{line:91,column:6},end:{line:91,column:41}},'51':{start:{line:93,column:6},end:{line:97,column:7}},'52':{start:{line:94,column:8},end:{line:94,column:24}},'53':{start:{line:95,column:8},end:{line:95,column:35}},'54':{start:{line:96,column:8},end:{line:96,column:31}},'55':{start:{line:101,column:2},end:{line:103,column:3}},'56':{start:{line:102,column:4},end:{line:102,column:13}},'57':{start:{line:105,column:2},end:{line:105,column:36}},'58':{start:{line:107,column:2},end:{line:120,column:3}},'59':{start:{line:109,column:22},end:{line:109,column:45}},'60':{start:{line:111,column:23},end:{line:111,column:46}},'61':{start:{line:112,column:4},end:{line:112,column:43}},'62':{start:{line:114,column:16},end:{line:114,column:87}},'63':{start:{line:116,column:4},end:{line:116,column:32}},'64':{start:{line:117,column:4},end:{line:117,column:17}},'65':{start:{line:119,column:4},end:{line:119,column:22}},'66':{start:{line:123,column:0},end:{line:123,column:55}}},fnMap:{'0':{name:'_classCallCheck',decl:{start:{line:1,column:9},end:{line:1,column:24}},loc:{start:{line:1,column:48},end:{line:1,column:153}},line:1},'1':{name:'Node',decl:{start:{line:6,column:20},end:{line:6,column:24}},loc:{start:{line:6,column:59},end:{line:14,column:1}},line:6},'2':{name:'DecisionTree',decl:{start:{line:16,column:28},end:{line:16,column:40}},loc:{start:{line:16,column:47},end:{line:23,column:1}},line:16},'3':{name:'(anonymous_3)',decl:{start:{line:25,column:35},end:{line:25,column:36}},loc:{start:{line:25,column:58},end:{line:29,column:1}},line:25},'4':{name:'(anonymous_4)',decl:{start:{line:26,column:18},end:{line:26,column:19}},loc:{start:{line:26,column:31},end:{line:28,column:3}},line:26},'5':{name:'(anonymous_5)',decl:{start:{line:31,column:31},end:{line:31,column:32}},loc:{start:{line:31,column:53},end:{line:61,column:1}},line:31},'6':{name:'splittingFunction',decl:{start:{line:36,column:33},end:{line:36,column:50}},loc:{start:{line:36,column:56},end:{line:38,column:5}},line:36},'7':{name:'splittingFunction',decl:{start:{line:41,column:33},end:{line:41,column:50}},loc:{start:{line:41,column:56},end:{line:43,column:5}},line:41},'8':{name:'(anonymous_8)',decl:{start:{line:46,column:23},end:{line:46,column:24}},loc:{start:{line:46,column:41},end:{line:52,column:3}},line:46},'9':{name:'(anonymous_9)',decl:{start:{line:53,column:24},end:{line:53,column:25}},loc:{start:{line:53,column:42},end:{line:59,column:3}},line:53},'10':{name:'(anonymous_10)',decl:{start:{line:63,column:31},end:{line:63,column:32}},loc:{start:{line:63,column:43},end:{line:121,column:1}},line:63},'11':{name:'_loop',decl:{start:{line:79,column:23},end:{line:79,column:28}},loc:{start:{line:79,column:32},end:{line:99,column:3}},line:79},'12':{name:'(anonymous_12)',decl:{start:{line:82,column:25},end:{line:82,column:26}},loc:{start:{line:82,column:42},end:{line:98,column:5}},line:82},'13':{name:'predict',decl:{start:{line:123,column:42},end:{line:123,column:49}},loc:{start:{line:123,column:52},end:{line:123,column:54}},line:123}},branchMap:{'0':{loc:{start:{line:1,column:50},end:{line:1,column:151}},type:'if',locations:[{start:{line:1,column:50},end:{line:1,column:151}},{start:{line:1,column:50},end:{line:1,column:151}}],line:1},'1':{loc:{start:{line:9,column:13},end:{line:9,column:22}},type:'binary-expr',locations:[{start:{line:9,column:13},end:{line:9,column:16}},{start:{line:9,column:20},end:{line:9,column:22}}],line:9},'2':{loc:{start:{line:13,column:17},end:{line:13,column:30}},type:'binary-expr',locations:[{start:{line:13,column:17},end:{line:13,column:24}},{start:{line:13,column:28},end:{line:13,column:30}}],line:13},'3':{loc:{start:{line:17,column:21},end:{line:17,column:96}},type:'cond-expr',locations:[{start:{line:17,column:74},end:{line:17,column:86}},{start:{line:17,column:89},end:{line:17,column:96}}],line:17},'4':{loc:{start:{line:17,column:21},end:{line:17,column:71}},type:'binary-expr',locations:[{start:{line:17,column:21},end:{line:17,column:41}},{start:{line:17,column:45},end:{line:17,column:71}}],line:17},'5':{loc:{start:{line:34,column:2},end:{line:44,column:3}},type:'if',locations:[{start:{line:34,column:2},end:{line:44,column:3}},{start:{line:34,column:2},end:{line:44,column:3}}],line:34},'6':{loc:{start:{line:34,column:6},end:{line:34,column:26}},type:'binary-expr',locations:[{start:{line:34,column:6},end:{line:34,column:14}},{start:{line:34,column:18},end:{line:34,column:26}}],line:34},'7':{loc:{start:{line:47,column:4},end:{line:49,column:5}},type:'if',locations:[{start:{line:47,column:4},end:{line:49,column:5}},{start:{line:47,column:4},end:{line:49,column:5}}],line:47},'8':{loc:{start:{line:54,column:4},end:{line:56,column:5}},type:'if',locations:[{start:{line:54,column:4},end:{line:56,column:5}},{start:{line:54,column:4},end:{line:56,column:5}}],line:54},'9':{loc:{start:{line:66,column:13},end:{line:66,column:90}},type:'cond-expr',locations:[{start:{line:66,column:66},end:{line:66,column:78}},{start:{line:66,column:81},end:{line:66,column:90}}],line:66},'10':{loc:{start:{line:66,column:13},end:{line:66,column:63}},type:'binary-expr',locations:[{start:{line:66,column:13},end:{line:66,column:33}},{start:{line:66,column:37},end:{line:66,column:63}}],line:66},'11':{loc:{start:{line:68,column:2},end:{line:70,column:3}},type:'if',locations:[{start:{line:68,column:2},end:{line:70,column:3}},{start:{line:68,column:2},end:{line:70,column:3}}],line:68},'12':{loc:{start:{line:93,column:6},end:{line:97,column:7}},type:'if',locations:[{start:{line:93,column:6},end:{line:97,column:7}},{start:{line:93,column:6},end:{line:97,column:7}}],line:93},'13':{loc:{start:{line:93,column:10},end:{line:93,column:89}},type:'binary-expr',locations:[{start:{line:93,column:10},end:{line:93,column:25}},{start:{line:93,column:29},end:{line:93,column:57}},{start:{line:93,column:61},end:{line:93,column:89}}],line:93},'14':{loc:{start:{line:107,column:2},end:{line:120,column:3}},type:'if',locations:[{start:{line:107,column:2},end:{line:120,column:3}},{start:{line:107,column:2},end:{line:120,column:3}}],line:107}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0,0],'14':[0,0]},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/DecisionTree.js'],names:['Matrix','entropy','Node','col','value','left','right','results','DecisionTree','data','evalFunction','of','prototype','getColumn','index','map','x','split','m','n','splittingFunction','isNaN','row','fold','acc','push','train','getRows','score','func','bestGain','bestAttribute','bestSets','columnCount','getCols','i','columnValues','__value','forEach','matrixSplit','p','console','log','gain','leftTrained','rightTrained','_node','predict'],mappings:'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',sourcesContent:['import Matrix from \'@astuanax/funmatrix\'\nimport entropy from \'./util/entropy\'\n\nclass Node {\n  constructor (col, value, left, right, results) {\n    this.col = col || -1\n    this.value = null\n    this.left = left\n    this.right = right\n    this.results = results || []\n  }\n}\n\nclass DecisionTree {\n  constructor (data, evalFunction = entropy) {\n    this.data = Matrix.of(data)\n    this.evalFunction = evalFunction\n  }\n}\n\nDecisionTree.prototype.getColumn = function (data, index) {\n  return data.map(x => x[index])\n}\n\nDecisionTree.prototype.split = function (data, m, n) {\n  let splittingFunction\n  //   splittingFunction = None\n  if (isNaN(m) || isNaN(n)) {\n    // strings\n    splittingFunction = row => row[m] === n\n  } else {\n    // numbers\n    splittingFunction = row => row[m] >= n\n  }\n  const left = data.fold((acc, x) => {\n    if (splittingFunction(x)) {\n      acc.push(x)\n    }\n    return acc\n  })\n  const right = data.fold((acc, x) => {\n    if (!splittingFunction(x)) {\n      acc.push(x)\n    }\n    return acc\n  })\n  return [left, right]\n}\n\nDecisionTree.prototype.train = function (data = this.data) {\n  if (this.data.getRows() === 0) {\n    return new Node()\n  }\n  const score = this.evalFunction.func(data) // Matrix\n\n  let bestGain = 0.0\n  let bestAttribute = []\n  let bestSets = []\n\n  const columnCount = this.data.getCols() - 1 // remove last cell >> dependant value\n\n  for (let i = 0; i < columnCount; ++i) {\n    const columnValues = this.getColumn(data, i).__value\n    columnValues.forEach(value => {\n      const matrixSplit = this.split(data, i, value)\n      const p = matrixSplit[0].getRows() / data.getRows()\n      console.log(\'p\', p)\n      const entropy = this.evalFunction.func(matrixSplit[0])\n      const gain = score - (p * entropy) - ((1 - p) * entropy)\n      console.log(\'gain\', gain, entropy)\n      if (gain > bestGain && matrixSplit[0].getRows() > 0 && matrixSplit[1].getRows() > 0) {\n        bestGain = gain\n        bestAttribute = [i, value]\n        bestSets = matrixSplit\n      }\n    })\n  }\n  console.log(\'bestGain\', bestGain)\n  if (bestGain > 0) {\n    // const left = new DecisionTree(bestSets[0].__value)\n    const leftTrained = this.train(bestSets[0])\n    // const right = new DecisionTree(bestSets[1].__value)\n    const rightTrained = this.train(bestSets[0])\n\n    console.log(leftTrained, rightTrained)\n    const _node = new Node(bestAttribute[0], bestAttribute[1], leftTrained, rightTrained)\n    console.log(\'_node\', _node)\n    return _node\n  } else {\n    return new Node()\n  }\n}\n\nDecisionTree.prototype.predict = function predict () {\n\n}\n\nexport default DecisionTree\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();function _classCallCheck(instance,Constructor){cov_1e3gf5jokt.f[0]++;cov_1e3gf5jokt.s[0]++;if(!(instance instanceof Constructor)){cov_1e3gf5jokt.b[0][0]++;cov_1e3gf5jokt.s[1]++;throw new TypeError("Cannot call a class as a function");}else{cov_1e3gf5jokt.b[0][1]++;}}cov_1e3gf5jokt.s[2]++;var Node=function Node(col,value,left,right,results){cov_1e3gf5jokt.f[1]++;cov_1e3gf5jokt.s[3]++;_classCallCheck(this,Node);cov_1e3gf5jokt.s[4]++;this.col=(cov_1e3gf5jokt.b[1][0]++,col)||(cov_1e3gf5jokt.b[1][1]++,-1);cov_1e3gf5jokt.s[5]++;this.value=null;cov_1e3gf5jokt.s[6]++;this.left=left;cov_1e3gf5jokt.s[7]++;this.right=right;cov_1e3gf5jokt.s[8]++;this.results=(cov_1e3gf5jokt.b[2][0]++,results)||(cov_1e3gf5jokt.b[2][1]++,[]);};cov_1e3gf5jokt.s[9]++;var DecisionTree=function DecisionTree(data){cov_1e3gf5jokt.f[2]++;var evalFunction=(cov_1e3gf5jokt.s[10]++,(cov_1e3gf5jokt.b[4][0]++,arguments.length>1)&&(cov_1e3gf5jokt.b[4][1]++,arguments[1]!==undefined)?(cov_1e3gf5jokt.b[3][0]++,arguments[1]):(cov_1e3gf5jokt.b[3][1]++,_util_entropy__WEBPACK_IMPORTED_MODULE_1__["default"]));cov_1e3gf5jokt.s[11]++;_classCallCheck(this,DecisionTree);cov_1e3gf5jokt.s[12]++;this.data=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(data);cov_1e3gf5jokt.s[13]++;this.evalFunction=evalFunction;};cov_1e3gf5jokt.s[14]++;DecisionTree.prototype.getColumn=function(data,index){cov_1e3gf5jokt.f[3]++;cov_1e3gf5jokt.s[15]++;return data.map(function(x){cov_1e3gf5jokt.f[4]++;cov_1e3gf5jokt.s[16]++;return x[index];});};cov_1e3gf5jokt.s[17]++;DecisionTree.prototype.split=function(data,m,n){cov_1e3gf5jokt.f[5]++;var splittingFunction;cov_1e3gf5jokt.s[18]++;if((cov_1e3gf5jokt.b[6][0]++,isNaN(m))||(cov_1e3gf5jokt.b[6][1]++,isNaN(n))){cov_1e3gf5jokt.b[5][0]++;cov_1e3gf5jokt.s[19]++;splittingFunction=function splittingFunction(row){cov_1e3gf5jokt.f[6]++;cov_1e3gf5jokt.s[20]++;return row[m]===n;};}else{cov_1e3gf5jokt.b[5][1]++;cov_1e3gf5jokt.s[21]++;splittingFunction=function splittingFunction(row){cov_1e3gf5jokt.f[7]++;cov_1e3gf5jokt.s[22]++;return row[m]>=n;};}var left=(cov_1e3gf5jokt.s[23]++,data.fold(function(acc,x){cov_1e3gf5jokt.f[8]++;cov_1e3gf5jokt.s[24]++;if(splittingFunction(x)){cov_1e3gf5jokt.b[7][0]++;cov_1e3gf5jokt.s[25]++;acc.push(x);}else{cov_1e3gf5jokt.b[7][1]++;}cov_1e3gf5jokt.s[26]++;return acc;}));var right=(cov_1e3gf5jokt.s[27]++,data.fold(function(acc,x){cov_1e3gf5jokt.f[9]++;cov_1e3gf5jokt.s[28]++;if(!splittingFunction(x)){cov_1e3gf5jokt.b[8][0]++;cov_1e3gf5jokt.s[29]++;acc.push(x);}else{cov_1e3gf5jokt.b[8][1]++;}cov_1e3gf5jokt.s[30]++;return acc;}));cov_1e3gf5jokt.s[31]++;return[left,right];};cov_1e3gf5jokt.s[32]++;DecisionTree.prototype.train=function(){cov_1e3gf5jokt.f[10]++;var _this=(cov_1e3gf5jokt.s[33]++,this);var data=(cov_1e3gf5jokt.s[34]++,(cov_1e3gf5jokt.b[10][0]++,arguments.length>0)&&(cov_1e3gf5jokt.b[10][1]++,arguments[0]!==undefined)?(cov_1e3gf5jokt.b[9][0]++,arguments[0]):(cov_1e3gf5jokt.b[9][1]++,this.data));cov_1e3gf5jokt.s[35]++;if(this.data.getRows()===0){cov_1e3gf5jokt.b[11][0]++;cov_1e3gf5jokt.s[36]++;return new Node();}else{cov_1e3gf5jokt.b[11][1]++;}var score=(cov_1e3gf5jokt.s[37]++,this.evalFunction.func(data));var bestGain=(cov_1e3gf5jokt.s[38]++,0.0);var bestAttribute=(cov_1e3gf5jokt.s[39]++,[]);var bestSets=(cov_1e3gf5jokt.s[40]++,[]);var columnCount=(cov_1e3gf5jokt.s[41]++,this.data.getCols()-1);cov_1e3gf5jokt.s[42]++;var _loop=function _loop(i){cov_1e3gf5jokt.f[11]++;var columnValues=(cov_1e3gf5jokt.s[43]++,_this.getColumn(data,i).__value);cov_1e3gf5jokt.s[44]++;columnValues.forEach(function(value){cov_1e3gf5jokt.f[12]++;var matrixSplit=(cov_1e3gf5jokt.s[45]++,_this.split(data,i,value));var p=(cov_1e3gf5jokt.s[46]++,matrixSplit[0].getRows()/data.getRows());cov_1e3gf5jokt.s[47]++;console.log('p',p);var entropy=(cov_1e3gf5jokt.s[48]++,_this.evalFunction.func(matrixSplit[0]));var gain=(cov_1e3gf5jokt.s[49]++,score-p*entropy-(1-p)*entropy);cov_1e3gf5jokt.s[50]++;console.log('gain',gain,entropy);cov_1e3gf5jokt.s[51]++;if((cov_1e3gf5jokt.b[13][0]++,gain>bestGain)&&(cov_1e3gf5jokt.b[13][1]++,matrixSplit[0].getRows()>0)&&(cov_1e3gf5jokt.b[13][2]++,matrixSplit[1].getRows()>0)){cov_1e3gf5jokt.b[12][0]++;cov_1e3gf5jokt.s[52]++;bestGain=gain;cov_1e3gf5jokt.s[53]++;bestAttribute=[i,value];cov_1e3gf5jokt.s[54]++;bestSets=matrixSplit;}else{cov_1e3gf5jokt.b[12][1]++;}});};cov_1e3gf5jokt.s[55]++;for(var i=0;i<columnCount;++i){cov_1e3gf5jokt.s[56]++;_loop(i);}cov_1e3gf5jokt.s[57]++;console.log('bestGain',bestGain);cov_1e3gf5jokt.s[58]++;if(bestGain>0){cov_1e3gf5jokt.b[14][0]++;var leftTrained=(cov_1e3gf5jokt.s[59]++,this.train(bestSets[0]));var rightTrained=(cov_1e3gf5jokt.s[60]++,this.train(bestSets[0]));cov_1e3gf5jokt.s[61]++;console.log(leftTrained,rightTrained);var _node=(cov_1e3gf5jokt.s[62]++,new Node(bestAttribute[0],bestAttribute[1],leftTrained,rightTrained));cov_1e3gf5jokt.s[63]++;console.log('_node',_node);cov_1e3gf5jokt.s[64]++;return _node;}else{cov_1e3gf5jokt.b[14][1]++;cov_1e3gf5jokt.s[65]++;return new Node();}};cov_1e3gf5jokt.s[66]++;DecisionTree.prototype.predict=function predict(){cov_1e3gf5jokt.f[13]++;};/* harmony default export */ __webpack_exports__["default"] = (DecisionTree);

/***/ }),

/***/ "./src/Impurity.js":
/*!*************************!*\
  !*** ./src/Impurity.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Impurity; });
var cov_102dtkdnz3=function(){var path="/Volumes/BigOne/github/funml/src/Impurity.js",hash="945de9d19b68f837ade1a0869a39c58b5137187c",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Volumes/BigOne/github/funml/src/Impurity.js",statementMap:{"0":{start:{line:1,column:50},end:{line:1,column:151}},"1":{start:{line:1,column:92},end:{line:1,column:149}},"2":{start:{line:7,column:15},end:{line:11,column:1}},"3":{start:{line:8,column:2},end:{line:8,column:34}},"4":{start:{line:10,column:2},end:{line:10,column:19}}},fnMap:{"0":{name:"_classCallCheck",decl:{start:{line:1,column:9},end:{line:1,column:24}},loc:{start:{line:1,column:48},end:{line:1,column:153}},line:1},"1":{name:"Impurity",decl:{start:{line:7,column:24},end:{line:7,column:32}},loc:{start:{line:7,column:39},end:{line:11,column:1}},line:7}},branchMap:{"0":{loc:{start:{line:1,column:50},end:{line:1,column:151}},type:"if",locations:[{start:{line:1,column:50},end:{line:1,column:151}},{start:{line:1,column:50},end:{line:1,column:151}}],line:1}},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0,"1":0},b:{"0":[0,0]},inputSourceMap:{version:3,sources:["/Volumes/BigOne/github/funml/src/Impurity.js"],names:["Impurity","func"],mappings:";;AAAA;;;;IAIqBA,Q,GACnB,kBAAaC,IAAb,EAAmB;AAAA;;AACjB,OAAKA,IAAL,GAAYA,IAAZ;AACD,C;;SAHkBD,Q",sourcesContent:["/**\n * @class Impurity\n * @param func\n */\nexport default class Impurity {\n  constructor (func) {\n    this.func = func\n  }\n}\n"]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();function _classCallCheck(instance,Constructor){cov_102dtkdnz3.f[0]++;cov_102dtkdnz3.s[0]++;if(!(instance instanceof Constructor)){cov_102dtkdnz3.b[0][0]++;cov_102dtkdnz3.s[1]++;throw new TypeError("Cannot call a class as a function");}else{cov_102dtkdnz3.b[0][1]++;}}cov_102dtkdnz3.s[2]++;var Impurity=function Impurity(func){cov_102dtkdnz3.f[1]++;cov_102dtkdnz3.s[3]++;_classCallCheck(this,Impurity);cov_102dtkdnz3.s[4]++;this.func=func;};

/***/ }),

/***/ "./src/NeuralNetwork.js":
/*!******************************!*\
  !*** ./src/NeuralNetwork.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @astuanax/funmatrix */ "@astuanax/funmatrix");
/* harmony import */ var _astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _util_sigmoid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/sigmoid */ "./src/util/sigmoid.js");
var cov_1iqjqhbg3k=function(){var path='/Volumes/BigOne/github/funml/src/NeuralNetwork.js',hash='ca3549a02612973b7802d2e4dff1f4ac56423c88',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/NeuralNetwork.js',statementMap:{'0':{start:{line:1,column:50},end:{line:1,column:151}},'1':{start:{line:1,column:92},end:{line:1,column:149}},'2':{start:{line:12,column:20},end:{line:34,column:1}},'3':{start:{line:13,column:2},end:{line:13,column:39}},'4':{start:{line:15,column:2},end:{line:17,column:3}},'5':{start:{line:16,column:4},end:{line:16,column:35}},'6':{start:{line:19,column:2},end:{line:19,column:30}},'7':{start:{line:20,column:2},end:{line:20,column:31}},'8':{start:{line:21,column:2},end:{line:21,column:31}},'9':{start:{line:23,column:10},end:{line:25,column:3}},'10':{start:{line:24,column:4},end:{line:24,column:33}},'11':{start:{line:27,column:2},end:{line:27,column:71}},'12':{start:{line:28,column:2},end:{line:28,column:72}},'13':{start:{line:29,column:2},end:{line:29,column:53}},'14':{start:{line:30,column:2},end:{line:30,column:53}},'15':{start:{line:31,column:2},end:{line:31,column:31}},'16':{start:{line:32,column:2},end:{line:32,column:25}},'17':{start:{line:33,column:2},end:{line:33,column:30}},'18':{start:{line:42,column:0},end:{line:45,column:2}},'19':{start:{line:43,column:13},end:{line:43,column:88}},'20':{start:{line:44,column:2},end:{line:44,column:33}},'21':{start:{line:53,column:0},end:{line:56,column:2}},'22':{start:{line:54,column:21},end:{line:54,column:92}},'23':{start:{line:55,column:2},end:{line:55,column:35}},'24':{start:{line:65,column:0},end:{line:84,column:2}},'25':{start:{line:66,column:14},end:{line:66,column:18}},'26':{start:{line:69,column:15},end:{line:69,column:43}},'27':{start:{line:70,column:15},end:{line:70,column:49}},'28':{start:{line:71,column:2},end:{line:71,column:45}},'29':{start:{line:73,column:2},end:{line:75,column:5}},'30':{start:{line:74,column:4},end:{line:74,column:50}},'31':{start:{line:77,column:15},end:{line:77,column:49}},'32':{start:{line:78,column:2},end:{line:78,column:45}},'33':{start:{line:79,column:2},end:{line:81,column:5}},'34':{start:{line:80,column:4},end:{line:80,column:50}},'35':{start:{line:83,column:2},end:{line:83,column:26}},'36':{start:{line:93,column:0},end:{line:142,column:2}},'37':{start:{line:94,column:15},end:{line:94,column:19}},'38':{start:{line:97,column:15},end:{line:97,column:43}},'39':{start:{line:98,column:15},end:{line:98,column:49}},'40':{start:{line:99,column:2},end:{line:99,column:45}},'41':{start:{line:101,column:2},end:{line:103,column:5}},'42':{start:{line:102,column:4},end:{line:102,column:51}},'43':{start:{line:105,column:16},end:{line:105,column:50}},'44':{start:{line:106,column:2},end:{line:106,column:47}},'45':{start:{line:107,column:2},end:{line:109,column:5}},'46':{start:{line:108,column:4},end:{line:108,column:51}},'47':{start:{line:111,column:16},end:{line:111,column:45}},'48':{start:{line:114,column:21},end:{line:114,column:57}},'49':{start:{line:117,column:18},end:{line:119,column:4}},'50':{start:{line:118,column:4},end:{line:118,column:52}},'51':{start:{line:120,column:2},end:{line:120,column:47}},'52':{start:{line:121,column:2},end:{line:121,column:52}},'53':{start:{line:123,column:16},end:{line:123,column:40}},'54':{start:{line:124,column:23},end:{line:124,column:53}},'55':{start:{line:126,column:2},end:{line:126,column:65}},'56':{start:{line:128,column:2},end:{line:128,column:52}},'57':{start:{line:130,column:13},end:{line:130,column:45}},'58':{start:{line:131,column:21},end:{line:131,column:51}},'59':{start:{line:133,column:23},end:{line:135,column:55}},'60':{start:{line:134,column:4},end:{line:134,column:52}},'61':{start:{line:137,column:16},end:{line:137,column:40}},'62':{start:{line:138,column:23},end:{line:138,column:58}},'63':{start:{line:139,column:2},end:{line:139,column:65}},'64':{start:{line:141,column:2},end:{line:141,column:57}}},fnMap:{'0':{name:'_classCallCheck',decl:{start:{line:1,column:9},end:{line:1,column:24}},loc:{start:{line:1,column:48},end:{line:1,column:153}},line:1},'1':{name:'NeuralNetwork',decl:{start:{line:12,column:29},end:{line:12,column:42}},loc:{start:{line:12,column:45},end:{line:34,column:1}},line:12},'2':{name:'f',decl:{start:{line:23,column:19},end:{line:23,column:20}},loc:{start:{line:23,column:24},end:{line:25,column:3}},line:23},'3':{name:'(anonymous_3)',decl:{start:{line:42,column:48},end:{line:42,column:49}},loc:{start:{line:42,column:60},end:{line:45,column:1}},line:42},'4':{name:'(anonymous_4)',decl:{start:{line:53,column:42},end:{line:53,column:43}},loc:{start:{line:53,column:54},end:{line:56,column:1}},line:53},'5':{name:'(anonymous_5)',decl:{start:{line:65,column:34},end:{line:65,column:35}},loc:{start:{line:65,column:56},end:{line:84,column:1}},line:65},'6':{name:'(anonymous_6)',decl:{start:{line:73,column:22},end:{line:73,column:23}},loc:{start:{line:73,column:37},end:{line:75,column:3}},line:73},'7':{name:'(anonymous_7)',decl:{start:{line:79,column:22},end:{line:79,column:23}},loc:{start:{line:79,column:37},end:{line:81,column:3}},line:79},'8':{name:'(anonymous_8)',decl:{start:{line:93,column:32},end:{line:93,column:33}},loc:{start:{line:93,column:67},end:{line:142,column:1}},line:93},'9':{name:'(anonymous_9)',decl:{start:{line:101,column:22},end:{line:101,column:23}},loc:{start:{line:101,column:37},end:{line:103,column:3}},line:101},'10':{name:'(anonymous_10)',decl:{start:{line:107,column:24},end:{line:107,column:25}},loc:{start:{line:107,column:39},end:{line:109,column:3}},line:107},'11':{name:'(anonymous_11)',decl:{start:{line:117,column:30},end:{line:117,column:31}},loc:{start:{line:117,column:45},end:{line:119,column:3}},line:117},'12':{name:'(anonymous_12)',decl:{start:{line:133,column:45},end:{line:133,column:46}},loc:{start:{line:133,column:60},end:{line:135,column:3}},line:133}},branchMap:{'0':{loc:{start:{line:1,column:50},end:{line:1,column:151}},type:'if',locations:[{start:{line:1,column:50},end:{line:1,column:151}},{start:{line:1,column:50},end:{line:1,column:151}}],line:1},'1':{loc:{start:{line:43,column:13},end:{line:43,column:88}},type:'cond-expr',locations:[{start:{line:43,column:66},end:{line:43,column:78}},{start:{line:43,column:81},end:{line:43,column:88}}],line:43},'2':{loc:{start:{line:43,column:13},end:{line:43,column:63}},type:'binary-expr',locations:[{start:{line:43,column:13},end:{line:43,column:33}},{start:{line:43,column:37},end:{line:43,column:63}}],line:43},'3':{loc:{start:{line:54,column:21},end:{line:54,column:92}},type:'cond-expr',locations:[{start:{line:54,column:74},end:{line:54,column:86}},{start:{line:54,column:89},end:{line:54,column:92}}],line:54},'4':{loc:{start:{line:54,column:21},end:{line:54,column:71}},type:'binary-expr',locations:[{start:{line:54,column:21},end:{line:54,column:41}},{start:{line:54,column:45},end:{line:54,column:71}}],line:54}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0]},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/NeuralNetwork.js'],names:['Matrix','sigmoid','NeuralNetwork','values','inputNodes','hiddenNodes','outputNodes','f','e','Math','random','weightsIh','weightsHo','biasH','biasO','setActivationFunction','setLearningRate','type','prototype','func','activationFunction','learningRate','predict','inputArray','inputs','fromArray','hidden','dot','of','add','map','row','output','toArray','train','targetArray','outputs','targets','outputErrors','subtract','gradients','dfunc','multiply','hiddenT','transpose','weightHoDeltas','whoT','hiddenErrors','hiddenGradient','inputsT','weightIhDeltas'],mappings:'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',sourcesContent:['import Matrix from \'@astuanax/funmatrix\'\nimport sigmoid from \'./util/sigmoid\'\n\n/**\n * @class NeuralNetwork\n * @param {Number} inputNodes\n * @param {Nmber} hiddenNodes\n * @param {Number} outputNodes\n */\nclass NeuralNetwork {\n  constructor (...values) {\n    [this.inputNodes, this.hiddenNodes, this.outputNodes] = values\n\n    const f = e => Math.random() * 2 - 1\n    this.weightsIh = Matrix.random(f, this.hiddenNodes, this.inputNodes)\n    this.weightsHo = Matrix.random(f, this.outputNodes, this.hiddenNodes)\n\n    this.biasH = Matrix.random(f, this.hiddenNodes, 1)\n    this.biasO = Matrix.random(f, this.outputNodes, 1)\n\n    this.setActivationFunction()\n    this.setLearningRate()\n\n    this.type = \'NeuralNetwork\'\n  }\n}\n/**\n * @memberOf NeuralNetwork\n * @function NeuralNetwork#setActivationFunction\n * @param {Function} func\n */\nNeuralNetwork.prototype.setActivationFunction = function (func = sigmoid) {\n  this.activationFunction = func\n}\n\n/**\n * @memberOf NeuralNetwork\n * @function NeuralNetwork#setLearningRate\n * @param {Number} learningRate\n */\nNeuralNetwork.prototype.setLearningRate = function (learningRate = 0.1) {\n  this.learningRate = learningRate\n}\n\n/**\n * @memberOf NeuralNetwork\n * @function NeuralNetwork#predict\n * @param {Array} inputArray\n * @returns {Array}\n */\nNeuralNetwork.prototype.predict = function (inputArray) {\n  // Generating the Hidden Outputs\n  let inputs = Matrix.fromArray(inputArray)\n  let hidden = Matrix.dot(this.weightsIh, inputs)\n  hidden = Matrix.of(hidden).add(this.biasH)\n  // activation function!\n  hidden = hidden.map(row => row.map(this.activationFunction.func))\n\n  // Generating the output\'s output!\n  let output = Matrix.dot(this.weightsHo, hidden)\n  output = Matrix.of(output).add(this.biasO)\n  output = output.map(row => row.map(this.activationFunction.func))\n  // Sending back to the caller!\n  return output.toArray()\n}\n\n/**\n * @memberOf NeuralNetwork\n * @function NeuralNetwork#train\n * @param {Array} inputArray\n * @param {Array} targetArray\n */\nNeuralNetwork.prototype.train = function (inputArray, targetArray) {\n  // Generating the Hidden Outputs\n  let inputs = Matrix.fromArray(inputArray)\n  let hidden = Matrix.dot(this.weightsIh, inputs)\n\n  hidden = Matrix.of(hidden).add(this.biasH)\n  // activation function!\n  hidden = hidden.map(row => row.map(this.activationFunction.func))\n\n  // Generating the output\'s output!\n  let outputs = Matrix.dot(this.weightsHo, hidden)\n  outputs = Matrix.of(outputs).add(this.biasO)\n  outputs = outputs.map(row => row.map(this.activationFunction.func))\n\n  // Convert array to matrix object\n  let targets = Matrix.fromArray(targetArray)\n\n  // Calculate the error\n  // ERROR = TARGETS - OUTPUTS\n  let outputErrors = Matrix.of(targets).subtract(outputs)\n\n  // let gradient = outputs * (1 - outputs);\n  // Calculate gradient\n  let gradients = outputs.map(row => row.map(this.activationFunction.dfunc))\n  gradients = gradients.multiply(outputErrors)\n  gradients = gradients.multiply(this.learningRate)\n\n  // Calculate deltas\n  let hiddenT = Matrix.transpose(hidden)\n  let weightHoDeltas = Matrix.dot(gradients, hiddenT)\n\n  // Adjust the weights by deltas\n  this.weightsHo = Matrix.of(this.weightsHo).add(weightHoDeltas)\n\n  // Adjust the bias by its deltas (which is just the gradients)\n  this.biasO = Matrix.of(this.biasO).add(gradients)\n\n  // Calculate the hidden layer errors\n  let whoT = Matrix.transpose(this.weightsHo)\n  let hiddenErrors = Matrix.dot(whoT, outputErrors)\n\n  // Calculate hidden gradient\n  let hiddenGradient = Matrix.of(hidden)\n    .map(row => row.map(this.activationFunction.dfunc))\n    .multiply(hiddenErrors)\n    .multiply(this.learningRate)\n\n  // Calcuate input->hidden deltas\n  let inputsT = Matrix.transpose(inputs)\n\n  let weightIhDeltas = Matrix.dot(hiddenGradient, inputsT)\n\n  this.weightsIh = Matrix.of(this.weightsIh).add(weightIhDeltas)\n  // Adjust the bias by its deltas (which is just the gradients)\n  this.biasH = Matrix.of(this.biasH).add(hiddenGradient)\n}\n\nexport default NeuralNetwork\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();function _classCallCheck(instance,Constructor){cov_1iqjqhbg3k.f[0]++;cov_1iqjqhbg3k.s[0]++;if(!(instance instanceof Constructor)){cov_1iqjqhbg3k.b[0][0]++;cov_1iqjqhbg3k.s[1]++;throw new TypeError("Cannot call a class as a function");}else{cov_1iqjqhbg3k.b[0][1]++;}}cov_1iqjqhbg3k.s[2]++;var NeuralNetwork=function NeuralNetwork(){cov_1iqjqhbg3k.f[1]++;cov_1iqjqhbg3k.s[3]++;_classCallCheck(this,NeuralNetwork);cov_1iqjqhbg3k.s[4]++;for(var _len=arguments.length,values=new Array(_len),_key=0;_key<_len;_key++){cov_1iqjqhbg3k.s[5]++;values[_key]=arguments[_key];}cov_1iqjqhbg3k.s[6]++;this.inputNodes=values[0];cov_1iqjqhbg3k.s[7]++;this.hiddenNodes=values[1];cov_1iqjqhbg3k.s[8]++;this.outputNodes=values[2];cov_1iqjqhbg3k.s[9]++;var f=function f(e){cov_1iqjqhbg3k.f[2]++;cov_1iqjqhbg3k.s[10]++;return Math.random()*2-1;};cov_1iqjqhbg3k.s[11]++;this.weightsIh=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.random(f,this.hiddenNodes,this.inputNodes);cov_1iqjqhbg3k.s[12]++;this.weightsHo=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.random(f,this.outputNodes,this.hiddenNodes);cov_1iqjqhbg3k.s[13]++;this.biasH=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.random(f,this.hiddenNodes,1);cov_1iqjqhbg3k.s[14]++;this.biasO=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.random(f,this.outputNodes,1);cov_1iqjqhbg3k.s[15]++;this.setActivationFunction();cov_1iqjqhbg3k.s[16]++;this.setLearningRate();cov_1iqjqhbg3k.s[17]++;this.type='NeuralNetwork';};cov_1iqjqhbg3k.s[18]++;NeuralNetwork.prototype.setActivationFunction=function(){cov_1iqjqhbg3k.f[3]++;var func=(cov_1iqjqhbg3k.s[19]++,(cov_1iqjqhbg3k.b[2][0]++,arguments.length>0)&&(cov_1iqjqhbg3k.b[2][1]++,arguments[0]!==undefined)?(cov_1iqjqhbg3k.b[1][0]++,arguments[0]):(cov_1iqjqhbg3k.b[1][1]++,_util_sigmoid__WEBPACK_IMPORTED_MODULE_1__["default"]));cov_1iqjqhbg3k.s[20]++;this.activationFunction=func;};cov_1iqjqhbg3k.s[21]++;NeuralNetwork.prototype.setLearningRate=function(){cov_1iqjqhbg3k.f[4]++;var learningRate=(cov_1iqjqhbg3k.s[22]++,(cov_1iqjqhbg3k.b[4][0]++,arguments.length>0)&&(cov_1iqjqhbg3k.b[4][1]++,arguments[0]!==undefined)?(cov_1iqjqhbg3k.b[3][0]++,arguments[0]):(cov_1iqjqhbg3k.b[3][1]++,0.1));cov_1iqjqhbg3k.s[23]++;this.learningRate=learningRate;};cov_1iqjqhbg3k.s[24]++;NeuralNetwork.prototype.predict=function(inputArray){cov_1iqjqhbg3k.f[5]++;var _this=(cov_1iqjqhbg3k.s[25]++,this);var inputs=(cov_1iqjqhbg3k.s[26]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.fromArray(inputArray));var hidden=(cov_1iqjqhbg3k.s[27]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(this.weightsIh,inputs));cov_1iqjqhbg3k.s[28]++;hidden=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(hidden).add(this.biasH);cov_1iqjqhbg3k.s[29]++;hidden=hidden.map(function(row){cov_1iqjqhbg3k.f[6]++;cov_1iqjqhbg3k.s[30]++;return row.map(_this.activationFunction.func);});var output=(cov_1iqjqhbg3k.s[31]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(this.weightsHo,hidden));cov_1iqjqhbg3k.s[32]++;output=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(output).add(this.biasO);cov_1iqjqhbg3k.s[33]++;output=output.map(function(row){cov_1iqjqhbg3k.f[7]++;cov_1iqjqhbg3k.s[34]++;return row.map(_this.activationFunction.func);});cov_1iqjqhbg3k.s[35]++;return output.toArray();};cov_1iqjqhbg3k.s[36]++;NeuralNetwork.prototype.train=function(inputArray,targetArray){cov_1iqjqhbg3k.f[8]++;var _this2=(cov_1iqjqhbg3k.s[37]++,this);var inputs=(cov_1iqjqhbg3k.s[38]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.fromArray(inputArray));var hidden=(cov_1iqjqhbg3k.s[39]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(this.weightsIh,inputs));cov_1iqjqhbg3k.s[40]++;hidden=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(hidden).add(this.biasH);cov_1iqjqhbg3k.s[41]++;hidden=hidden.map(function(row){cov_1iqjqhbg3k.f[9]++;cov_1iqjqhbg3k.s[42]++;return row.map(_this2.activationFunction.func);});var outputs=(cov_1iqjqhbg3k.s[43]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(this.weightsHo,hidden));cov_1iqjqhbg3k.s[44]++;outputs=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(outputs).add(this.biasO);cov_1iqjqhbg3k.s[45]++;outputs=outputs.map(function(row){cov_1iqjqhbg3k.f[10]++;cov_1iqjqhbg3k.s[46]++;return row.map(_this2.activationFunction.func);});var targets=(cov_1iqjqhbg3k.s[47]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.fromArray(targetArray));var outputErrors=(cov_1iqjqhbg3k.s[48]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(targets).subtract(outputs));var gradients=(cov_1iqjqhbg3k.s[49]++,outputs.map(function(row){cov_1iqjqhbg3k.f[11]++;cov_1iqjqhbg3k.s[50]++;return row.map(_this2.activationFunction.dfunc);}));cov_1iqjqhbg3k.s[51]++;gradients=gradients.multiply(outputErrors);cov_1iqjqhbg3k.s[52]++;gradients=gradients.multiply(this.learningRate);var hiddenT=(cov_1iqjqhbg3k.s[53]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.transpose(hidden));var weightHoDeltas=(cov_1iqjqhbg3k.s[54]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(gradients,hiddenT));cov_1iqjqhbg3k.s[55]++;this.weightsHo=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(this.weightsHo).add(weightHoDeltas);cov_1iqjqhbg3k.s[56]++;this.biasO=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(this.biasO).add(gradients);var whoT=(cov_1iqjqhbg3k.s[57]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.transpose(this.weightsHo));var hiddenErrors=(cov_1iqjqhbg3k.s[58]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(whoT,outputErrors));var hiddenGradient=(cov_1iqjqhbg3k.s[59]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(hidden).map(function(row){cov_1iqjqhbg3k.f[12]++;cov_1iqjqhbg3k.s[60]++;return row.map(_this2.activationFunction.dfunc);}).multiply(hiddenErrors).multiply(this.learningRate));var inputsT=(cov_1iqjqhbg3k.s[61]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.transpose(inputs));var weightIhDeltas=(cov_1iqjqhbg3k.s[62]++,_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.dot(hiddenGradient,inputsT));cov_1iqjqhbg3k.s[63]++;this.weightsIh=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(this.weightsIh).add(weightIhDeltas);cov_1iqjqhbg3k.s[64]++;this.biasH=_astuanax_funmatrix__WEBPACK_IMPORTED_MODULE_0___default.a.of(this.biasH).add(hiddenGradient);};/* harmony default export */ __webpack_exports__["default"] = (NeuralNetwork);

/***/ }),

/***/ "./src/Perceptron.js":
/*!***************************!*\
  !*** ./src/Perceptron.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var cov_e2hkijyjy=function(){var path='/Volumes/BigOne/github/funml/src/Perceptron.js',hash='d0c34d37814448cc885edd5812645c66c8e3c494',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/Perceptron.js',statementMap:{'0':{start:{line:10,column:17},end:{line:12,column:1}},'1':{start:{line:11,column:2},end:{line:11,column:31}},'2':{start:{line:28,column:0},end:{line:37,column:2}},'3':{start:{line:29,column:2},end:{line:29,column:44}},'4':{start:{line:29,column:33},end:{line:29,column:44}},'5':{start:{line:31,column:2},end:{line:34,column:3}},'6':{start:{line:32,column:4},end:{line:32,column:23}},'7':{start:{line:33,column:4},end:{line:33,column:16}},'8':{start:{line:36,column:2},end:{line:36,column:29}},'9':{start:{line:44,column:0},end:{line:44,column:41}},'10':{start:{line:58,column:0},end:{line:66,column:2}},'11':{start:{line:59,column:14},end:{line:59,column:18}},'12':{start:{line:61,column:19},end:{line:61,column:34}},'13':{start:{line:62,column:2},end:{line:64,column:5}},'14':{start:{line:63,column:4},end:{line:63,column:43}},'15':{start:{line:65,column:2},end:{line:65,column:33}},'16':{start:{line:83,column:0},end:{line:103,column:2}},'17':{start:{line:84,column:15},end:{line:84,column:19}},'18':{start:{line:86,column:2},end:{line:88,column:5}},'19':{start:{line:87,column:4},end:{line:87,column:13}},'20':{start:{line:90,column:2},end:{line:102,column:3}},'21':{start:{line:91,column:4},end:{line:101,column:7}},'22':{start:{line:92,column:21},end:{line:92,column:35}},'23':{start:{line:93,column:16},end:{line:93,column:30}},'24':{start:{line:95,column:23},end:{line:95,column:42}},'25':{start:{line:97,column:18},end:{line:97,column:39}},'26':{start:{line:98,column:6},end:{line:100,column:9}},'27':{start:{line:99,column:8},end:{line:99,column:51}}},fnMap:{'0':{name:'Perceptron',decl:{start:{line:10,column:26},end:{line:10,column:36}},loc:{start:{line:10,column:46},end:{line:12,column:1}},line:10},'1':{name:'(anonymous_1)',decl:{start:{line:28,column:16},end:{line:28,column:17}},loc:{start:{line:28,column:31},end:{line:37,column:1}},line:28},'2':{name:'(anonymous_2)',decl:{start:{line:58,column:31},end:{line:58,column:32}},loc:{start:{line:58,column:46},end:{line:66,column:1}},line:58},'3':{name:'(anonymous_3)',decl:{start:{line:62,column:14},end:{line:62,column:15}},loc:{start:{line:62,column:30},end:{line:64,column:3}},line:62},'4':{name:'(anonymous_4)',decl:{start:{line:83,column:29},end:{line:83,column:30}},loc:{start:{line:83,column:61},end:{line:103,column:1}},line:83},'5':{name:'(anonymous_5)',decl:{start:{line:86,column:63},end:{line:86,column:64}},loc:{start:{line:86,column:76},end:{line:88,column:3}},line:86},'6':{name:'(anonymous_6)',decl:{start:{line:91,column:18},end:{line:91,column:19}},loc:{start:{line:91,column:36},end:{line:101,column:5}},line:91},'7':{name:'(anonymous_7)',decl:{start:{line:98,column:18},end:{line:98,column:19}},loc:{start:{line:98,column:34},end:{line:100,column:7}},line:98}},branchMap:{'0':{loc:{start:{line:11,column:17},end:{line:11,column:30}},type:'binary-expr',locations:[{start:{line:11,column:17},end:{line:11,column:24}},{start:{line:11,column:28},end:{line:11,column:30}}],line:11},'1':{loc:{start:{line:29,column:2},end:{line:29,column:44}},type:'if',locations:[{start:{line:29,column:2},end:{line:29,column:44}},{start:{line:29,column:2},end:{line:29,column:44}}],line:29},'2':{loc:{start:{line:31,column:2},end:{line:34,column:3}},type:'if',locations:[{start:{line:31,column:2},end:{line:34,column:3}},{start:{line:31,column:2},end:{line:34,column:3}}],line:31},'3':{loc:{start:{line:65,column:9},end:{line:65,column:32}},type:'cond-expr',locations:[{start:{line:65,column:27},end:{line:65,column:28}},{start:{line:65,column:31},end:{line:65,column:32}}],line:65}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/Perceptron.js'],names:['Perceptron','weights','of','val','prototype','type','predict','row','activation','forEach','x','i','train','lRate','nEpoch','Array','apply','length','map','idx','expected','slice','prediction','error','y','j'],mappings:'AAAA;;;;;;;;;AASA,IAAIA,UAAU,GAAG,SAAbA,UAAa,CAAUC,OAAV,EAAmB;AAClC,OAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACD,CAFD;AAIA;;;;;;;;;;;;;;;AAaAD,UAAU,CAACE,EAAX,GAAgB,UAAUC,GAAV,EAAe;AAC7B,MAAIA,GAAG,YAAYH,UAAnB,EAA+B,OAAOG,GAAP;;AAC/B,MAAI,gBAAgBH,UAApB,EAAgC;AAC9B,SAAKC,OAAL,GAAeE,GAAf;AACA,WAAO,IAAP;AACD;;AACD,SAAO,IAAIH,UAAJ,CAAeG,GAAf,CAAP;AACD,CAPD;AASA;;;;;;AAIAH,UAAU,CAACI,SAAX,CAAqBC,IAArB,GAA4B,YAA5B;AAEA;;;;;;;;;;;;;AAYAL,UAAU,CAACI,SAAX,CAAqBE,OAArB,GAA+B,UAAUC,GAAV,EAAe;AAAA;;AAC5C,MAAIC,UAAU,GAAG,KAAKP,OAAL,CAAa,CAAb,CAAjB;AACAM,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpBH,IAAAA,UAAU,IAAI,KAAI,CAACP,OAAL,CAAaU,CAAC,GAAG,CAAjB,IAAsBD,CAApC;AACD,GAFD;AAGA,SAAOF,UAAU,IAAI,CAAd,GAAkB,CAAlB,GAAsB,CAA7B;AACD,CAND;AAQA;;;;;;;;;;;;;;;;AAcAR,UAAU,CAACI,SAAX,CAAqBQ,KAArB,GAA6B,UAAUA,KAAV,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAAA;;AAC3D,OAAKb,OAAL,GAAec,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBD,KAAK,CAACH,KAAK,CAAC,CAAD,CAAL,CAASK,MAAV,CAAvB,EAA0CC,GAA1C,CAA8C,UAAAR,CAAC;AAAA,WAAI,CAAJ;AAAA,GAA/C,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,MAApB,EAA4BH,CAAC,EAA7B,EAAiC;AAC/BC,IAAAA,KAAK,CAACH,OAAN,CAAc,UAACC,CAAD,EAAIS,GAAJ,EAAY;AACxB,UAAMC,QAAQ,GAAGV,CAAC,CAACW,KAAF,CAAQ,CAAC,CAAT,EAAY,CAAZ,CAAjB;AACA,UAAMd,GAAG,GAAGG,CAAC,CAACW,KAAF,CAAQ,CAAR,EAAW,CAAC,CAAZ,CAAZ;;AACA,UAAMC,UAAU,GAAG,MAAI,CAAChB,OAAL,CAAaC,GAAb,CAAnB;;AACA,UAAMgB,KAAK,GAAGH,QAAQ,GAAGE,UAAzB;AACAf,MAAAA,GAAG,CAACE,OAAJ,CAAY,UAACe,CAAD,EAAIC,CAAJ,EAAU;AACpB,QAAA,MAAI,CAACxB,OAAL,CAAawB,CAAC,GAAG,CAAjB,KAAuBZ,KAAK,GAAGU,KAAR,GAAgBC,CAAvC;AACD,OAFD;AAGD,KARD;AASD;AACF,CAbD;;AAeA,eAAexB,UAAf',sourcesContent:['/**\n * @class Perceptron\n * @classdesc Perceptron to train and predict\n * @see of\n * @example\n *\n * const m =  Perceptron.of([0.2365698, 0.4567897, 0.95989898, -0.457878787])\n *\n */\nlet Perceptron = function (weights) {\n  this.weights = weights || []\n}\n\n/**\n * @memberOf Perceptron\n * @static\n * @function Perceptron.of\n * @desc Creates a Perceptron object\n * @param weights {array} Weights for predicting\n * @returns {Perceptron}\n * @example\n *\n * const weights = [0.123456, 0.458789, 0.9987454]\n * const m =  Perceptron.of(weights)\n *\n */\nPerceptron.of = function (val) {\n  if (val instanceof Perceptron) return val\n  if (this instanceof Perceptron) {\n    this.weights = val\n    return this\n  }\n  return new Perceptron(val)\n}\n\n/**\n * @memberOf Perceptron\n * @type {string}\n */\nPerceptron.prototype.type = \'Perceptron\'\n\n/**\n * @memberOf Perceptron\n * @function Perceptron#predict\n * @param row {Array} Array of values to predict\n * @returns {Boolean}\n * @example\n *\n * const m =  Perceptron.of()\n * const train  = [...] // dataset: [[0,1,2], [1,2,3]]\n * m.train(train, 0.1, 10000)\n * m.predict([1,2,1]) // returns 1 or 0\n */\nPerceptron.prototype.predict = function (row) {\n  var activation = this.weights[0]\n  row.forEach((x, i) => {\n    activation += this.weights[i + 1] * x\n  })\n  return activation >= 0 ? 1 : 0\n}\n\n/**\n * @memberOf Perceptron\n * @function Perceptron#train\n * @param train {Array} Dataset to train the preceptron\n * @param lRate {Number} Set the learning rate of the perceptron\n * @param nEpoch {Number} Set the number of iterations to train the perceptron\n * @example\n *\n * const m =  Perceptron.of()\n * const train  = [...] // dataset: [[0,1,2], [1,2,3]]\n * m.train(train, 0.1, 10000)\n * m.weights = [0.213131, -0.45464, 0.789797]\n *\n */\nPerceptron.prototype.train = function (train, lRate, nEpoch) {\n  this.weights = Array.apply(null, Array(train[0].length)).map(x => 0)\n  for (let i = 0; i < nEpoch; i++) {\n    train.forEach((x, idx) => {\n      const expected = x.slice(-1)[0]\n      const row = x.slice(0, -1)\n      const prediction = this.predict(row)\n      const error = expected - prediction\n      row.forEach((y, j) => {\n        this.weights[j + 1] += lRate * error * y\n      })\n    })\n  }\n}\n\nexport default Perceptron\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_e2hkijyjy.s[0]++;var Perceptron=function Perceptron(weights){cov_e2hkijyjy.f[0]++;cov_e2hkijyjy.s[1]++;this.weights=(cov_e2hkijyjy.b[0][0]++,weights)||(cov_e2hkijyjy.b[0][1]++,[]);};cov_e2hkijyjy.s[2]++;Perceptron.of=function(val){cov_e2hkijyjy.f[1]++;cov_e2hkijyjy.s[3]++;if(val instanceof Perceptron){cov_e2hkijyjy.b[1][0]++;cov_e2hkijyjy.s[4]++;return val;}else{cov_e2hkijyjy.b[1][1]++;}cov_e2hkijyjy.s[5]++;if(this instanceof Perceptron){cov_e2hkijyjy.b[2][0]++;cov_e2hkijyjy.s[6]++;this.weights=val;cov_e2hkijyjy.s[7]++;return this;}else{cov_e2hkijyjy.b[2][1]++;}cov_e2hkijyjy.s[8]++;return new Perceptron(val);};cov_e2hkijyjy.s[9]++;Perceptron.prototype.type='Perceptron';cov_e2hkijyjy.s[10]++;Perceptron.prototype.predict=function(row){cov_e2hkijyjy.f[2]++;var _this=(cov_e2hkijyjy.s[11]++,this);var activation=(cov_e2hkijyjy.s[12]++,this.weights[0]);cov_e2hkijyjy.s[13]++;row.forEach(function(x,i){cov_e2hkijyjy.f[3]++;cov_e2hkijyjy.s[14]++;activation+=_this.weights[i+1]*x;});cov_e2hkijyjy.s[15]++;return activation>=0?(cov_e2hkijyjy.b[3][0]++,1):(cov_e2hkijyjy.b[3][1]++,0);};cov_e2hkijyjy.s[16]++;Perceptron.prototype.train=function(train,lRate,nEpoch){cov_e2hkijyjy.f[4]++;var _this2=(cov_e2hkijyjy.s[17]++,this);cov_e2hkijyjy.s[18]++;this.weights=Array.apply(null,Array(train[0].length)).map(function(x){cov_e2hkijyjy.f[5]++;cov_e2hkijyjy.s[19]++;return 0;});cov_e2hkijyjy.s[20]++;for(var i=0;i<nEpoch;i++){cov_e2hkijyjy.s[21]++;train.forEach(function(x,idx){cov_e2hkijyjy.f[6]++;var expected=(cov_e2hkijyjy.s[22]++,x.slice(-1)[0]);var row=(cov_e2hkijyjy.s[23]++,x.slice(0,-1));var prediction=(cov_e2hkijyjy.s[24]++,_this2.predict(row));var error=(cov_e2hkijyjy.s[25]++,expected-prediction);cov_e2hkijyjy.s[26]++;row.forEach(function(y,j){cov_e2hkijyjy.f[7]++;cov_e2hkijyjy.s[27]++;_this2.weights[j+1]+=lRate*error*y;});});}};/* harmony default export */ __webpack_exports__["default"] = (Perceptron);

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: Perceptron, NeuralNetwork, ActivationFunction, sigmoid, tanh, entropy, DecisionTree, Impurity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Perceptron__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Perceptron */ "./src/Perceptron.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Perceptron", function() { return _Perceptron__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _NeuralNetwork__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NeuralNetwork */ "./src/NeuralNetwork.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NeuralNetwork", function() { return _NeuralNetwork__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _ActivationFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ActivationFunction */ "./src/ActivationFunction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivationFunction", function() { return _ActivationFunction__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _util_sigmoid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/sigmoid */ "./src/util/sigmoid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sigmoid", function() { return _util_sigmoid__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _util_tanh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/tanh */ "./src/util/tanh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tanh", function() { return _util_tanh__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _util_entropy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/entropy */ "./src/util/entropy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "entropy", function() { return _util_entropy__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _DecisionTree__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./DecisionTree */ "./src/DecisionTree.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DecisionTree", function() { return _DecisionTree__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _Impurity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Impurity */ "./src/Impurity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Impurity", function() { return _Impurity__WEBPACK_IMPORTED_MODULE_7__["default"]; });

var cov_9mbhrbx2u=function(){var path='/Volumes/BigOne/github/funml/src/index.js',hash='609fdc2be2b2d060aa1cf1f8e96c094f10bf6c0a',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/index.js',statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/index.js'],names:['default','Perceptron','NeuralNetwork','ActivationFunction','sigmoid','tanh','entropy','DecisionTree','Impurity'],mappings:'AAAA,SAASA,OAAO,IAAIC,UAApB,QAAsC,cAAtC;AACA,SAASD,OAAO,IAAIE,aAApB,QAAyC,iBAAzC;AACA,SAASF,OAAO,IAAIG,kBAApB,QAA8C,sBAA9C;AACA,SAASH,OAAO,IAAII,OAApB,QAAmC,gBAAnC;AACA,SAASJ,OAAO,IAAIK,IAApB,QAAgC,aAAhC;AAEA,SAASL,OAAO,IAAIM,OAApB,QAAmC,gBAAnC;AACA,SAASN,OAAO,IAAIO,YAApB,QAAwC,gBAAxC;AACA,SAASP,OAAO,IAAIQ,QAApB,QAAoC,YAApC',sourcesContent:['export { default as Perceptron } from \'./Perceptron\'\nexport { default as NeuralNetwork } from \'./NeuralNetwork\'\nexport { default as ActivationFunction } from \'./ActivationFunction\'\nexport { default as sigmoid } from \'./util/sigmoid\'\nexport { default as tanh } from \'./util/tanh\'\n\nexport { default as entropy } from \'./util/entropy\'\nexport { default as DecisionTree } from \'./DecisionTree\'\nexport { default as Impurity } from \'./Impurity\'\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();

/***/ }),

/***/ "./src/util/entropy.js":
/*!*****************************!*\
  !*** ./src/util/entropy.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Impurity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Impurity */ "./src/Impurity.js");
/* harmony import */ var fun_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fun.js */ "fun.js");
/* harmony import */ var fun_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fun_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _mapReduce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapReduce */ "./src/util/mapReduce.js");
var cov_1mn71lriix=function(){var path='/Volumes/BigOne/github/funml/src/util/entropy.js',hash='9e67c7b59b79b3737720d8fddc3c3cf4010a6481',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/util/entropy.js',statementMap:{'0':{start:{line:4,column:17},end:{line:7,column:6}},'1':{start:{line:5,column:2},end:{line:5,column:56}},'2':{start:{line:6,column:2},end:{line:6,column:13}},'3':{start:{line:9,column:18},end:{line:16,column:1}},'4':{start:{line:10,column:2},end:{line:15,column:4}},'5':{start:{line:11,column:4},end:{line:14,column:16}},'6':{start:{line:12,column:6},end:{line:12,column:26}},'7':{start:{line:13,column:6},end:{line:13,column:17}},'8':{start:{line:23,column:14},end:{line:35,column:2}},'9':{start:{line:25,column:12},end:{line:27,column:4}},'10':{start:{line:26,column:4},end:{line:26,column:31}},'11':{start:{line:29,column:23},end:{line:29,column:38}},'12':{start:{line:30,column:15},end:{line:30,column:31}},'13':{start:{line:31,column:25},end:{line:31,column:60}},'14':{start:{line:32,column:2},end:{line:34,column:32}},'15':{start:{line:33,column:4},end:{line:33,column:29}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:4,column:22},end:{line:4,column:23}},loc:{start:{line:4,column:42},end:{line:7,column:1}},line:4},'1':{name:'frequencies',decl:{start:{line:9,column:27},end:{line:9,column:38}},loc:{start:{line:9,column:46},end:{line:16,column:1}},line:9},'2':{name:'(anonymous_2)',decl:{start:{line:10,column:9},end:{line:10,column:10}},loc:{start:{line:10,column:24},end:{line:15,column:3}},line:10},'3':{name:'(anonymous_3)',decl:{start:{line:11,column:16},end:{line:11,column:17}},loc:{start:{line:11,column:34},end:{line:14,column:5}},line:11},'4':{name:'(anonymous_4)',decl:{start:{line:23,column:27},end:{line:23,column:28}},loc:{start:{line:23,column:45},end:{line:35,column:1}},line:23},'5':{name:'(anonymous_5)',decl:{start:{line:25,column:31},end:{line:25,column:32}},loc:{start:{line:25,column:46},end:{line:27,column:3}},line:25},'6':{name:'(anonymous_6)',decl:{start:{line:32,column:24},end:{line:32,column:25}},loc:{start:{line:32,column:37},end:{line:34,column:3}},line:32}},branchMap:{'0':{loc:{start:{line:5,column:13},end:{line:5,column:55}},type:'cond-expr',locations:[{start:{line:5,column:38},end:{line:5,column:39}},{start:{line:5,column:42},end:{line:5,column:55}}],line:5}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},b:{'0':[0,0]},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/util/entropy.js'],names:['Impurity','add','fold','mapReduce','uniqsCount','acc','val','undefined','frequencies','total','obj','y','push','entropy','matrix','arr','__value','map','row','length','countedClasses','nrRows','getRows','classFrequencies','x','Math','log2'],mappings:'AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,QAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,UAAU,GAAGF,IAAI,CAAC,UAACG,GAAD,EAAMC,GAAN,EAAc;AACpCD,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAWD,GAAG,CAACC,GAAD,CAAH,KAAaC,SAAb,GAAyB,CAAzB,GAA6BF,GAAG,CAACC,GAAD,CAAH,IAAY,CAApD;AACA,SAAOD,GAAP;AACD,CAHsB,EAGpB,EAHoB,CAAvB;;AAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,UAAAC,GAAG;AAAA,WAAIR,IAAI,CAAC,UAACG,GAAD,EAAMM,CAAN,EAAY;AACnDN,MAAAA,GAAG,CAACO,IAAJ,CAASD,CAAC,GAAGF,KAAb;AACA,aAAOJ,GAAP;AACD,KAHuC,CAAJ,CAGjC,EAHiC,EAG7BK,GAH6B,CAAJ;AAAA,GAAP;AAAA,CAAzB;AAKA;;;;;;AAIA,IAAMG,OAAO,GAAG,IAAIb,QAAJ,CACd,UAAAc,MAAM,EAAI;AACR;AACA,MAAMC,GAAG,GAAGD,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACA,GAAG,CAACC,MAAJ,GAAa,CAAd,CAAP;AAAA,GAAtB,CAAZ;;AACA,MAAMC,cAAc,GAAGhB,UAAU,CAACW,GAAD,CAAjC;AACA,MAAMM,MAAM,GAAGP,MAAM,CAACQ,OAAP,EAAf;AACA,MAAMC,gBAAgB,GAAGf,WAAW,CAACa,MAAD,CAAX,CAAoBD,cAApB,CAAzB;AAEA,SAAOlB,IAAI,CAACC,SAAS,CAAC,UAAAqB,CAAC;AAAA,WAAI,CAACA,CAAD,GAAKC,IAAI,CAACC,IAAL,CAAUF,CAAV,CAAT;AAAA,GAAF,EAAyBvB,GAAzB,CAAV,EAAyC,CAAzC,EAA4CsB,gBAA5C,CAAX;AACD,CATa,CAAhB;AAWA,eAAeV,OAAf',sourcesContent:['import Impurity from \'../Impurity\'\r\nimport { add, fold } from \'fun.js\'\r\nimport mapReduce from \'./mapReduce\'\r\n\r\nconst uniqsCount = fold((acc, val) => {\r\n  acc[val] = acc[val] === undefined ? 1 : acc[val] += 1\r\n  return acc\r\n}, {})\r\n\r\nconst frequencies = total => obj => fold((acc, y) => {\r\n  acc.push(y / total)\r\n  return acc\r\n})([])(obj)\r\n\r\n/**\r\n * @function emtropy\r\n * @type {Impurity}\r\n */\r\nconst entropy = new Impurity(\r\n  matrix => {\r\n    // TODO check instanceof Matrix\r\n    const arr = matrix.__value.map(row => row[row.length - 1])\r\n    const countedClasses = uniqsCount(arr)\r\n    const nrRows = matrix.getRows()\r\n    const classFrequencies = frequencies(nrRows)(countedClasses)\r\n\r\n    return fold(mapReduce(x => -x * Math.log2(x), add), 0, classFrequencies)\r\n  }\r\n)\r\nexport default entropy\r\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var uniqsCount=(cov_1mn71lriix.s[0]++,Object(fun_js__WEBPACK_IMPORTED_MODULE_1__["fold"])(function(acc,val){cov_1mn71lriix.f[0]++;cov_1mn71lriix.s[1]++;acc[val]=acc[val]===undefined?(cov_1mn71lriix.b[0][0]++,1):(cov_1mn71lriix.b[0][1]++,acc[val]+=1);cov_1mn71lriix.s[2]++;return acc;},{}));cov_1mn71lriix.s[3]++;var frequencies=function frequencies(total){cov_1mn71lriix.f[1]++;cov_1mn71lriix.s[4]++;return function(obj){cov_1mn71lriix.f[2]++;cov_1mn71lriix.s[5]++;return Object(fun_js__WEBPACK_IMPORTED_MODULE_1__["fold"])(function(acc,y){cov_1mn71lriix.f[3]++;cov_1mn71lriix.s[6]++;acc.push(y/total);cov_1mn71lriix.s[7]++;return acc;})([])(obj);};};var entropy=(cov_1mn71lriix.s[8]++,new _Impurity__WEBPACK_IMPORTED_MODULE_0__["default"](function(matrix){cov_1mn71lriix.f[4]++;var arr=(cov_1mn71lriix.s[9]++,matrix.__value.map(function(row){cov_1mn71lriix.f[5]++;cov_1mn71lriix.s[10]++;return row[row.length-1];}));var countedClasses=(cov_1mn71lriix.s[11]++,uniqsCount(arr));var nrRows=(cov_1mn71lriix.s[12]++,matrix.getRows());var classFrequencies=(cov_1mn71lriix.s[13]++,frequencies(nrRows)(countedClasses));cov_1mn71lriix.s[14]++;return Object(fun_js__WEBPACK_IMPORTED_MODULE_1__["fold"])(Object(_mapReduce__WEBPACK_IMPORTED_MODULE_2__["default"])(function(x){cov_1mn71lriix.f[6]++;cov_1mn71lriix.s[15]++;return-x*Math.log2(x);},fun_js__WEBPACK_IMPORTED_MODULE_1__["add"]),0,classFrequencies);}));/* harmony default export */ __webpack_exports__["default"] = (entropy);

/***/ }),

/***/ "./src/util/mapReduce.js":
/*!*******************************!*\
  !*** ./src/util/mapReduce.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var fun_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fun.js */ "fun.js");
/* harmony import */ var fun_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fun_js__WEBPACK_IMPORTED_MODULE_0__);
var cov_145dwii0no=function(){var path='/Volumes/BigOne/github/funml/src/util/mapReduce.js',hash='a2e258e003edeb1315f7173219ab942fc57e2dfd',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/util/mapReduce.js',statementMap:{'0':{start:{line:2,column:16},end:{line:6,column:2}},'1':{start:{line:3,column:2},end:{line:5,column:4}},'2':{start:{line:4,column:4},end:{line:4,column:22}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:2,column:22},end:{line:2,column:23}},loc:{start:{line:2,column:38},end:{line:6,column:1}},line:2},'1':{name:'(anonymous_1)',decl:{start:{line:3,column:9},end:{line:3,column:10}},loc:{start:{line:3,column:25},end:{line:5,column:3}},line:3}},branchMap:{},s:{'0':0,'1':0,'2':0},f:{'0':0,'1':0},b:{},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/util/mapReduce.js'],names:['curry','mapReduce','m','r','x','y'],mappings:'AAAA,SAASA,KAAT,QAAsB,QAAtB;AAEA,IAAMC,SAAS,GAAGD,KAAK,CAAC,UAACE,CAAD,EAAIC,CAAJ;AAAA,SAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUF,CAAC,CAACC,CAAD,EAAIF,CAAC,CAACG,CAAD,CAAL,CAAX;AAAA,GAAV;AAAA,CAAD,CAAvB;AACA,eAAeJ,SAAf',sourcesContent:['import { curry } from \'fun.js\'\n\nconst mapReduce = curry((m, r) => (x, y) => r(x, m(y)))\nexport default mapReduce\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var mapReduce=(cov_145dwii0no.s[0]++,Object(fun_js__WEBPACK_IMPORTED_MODULE_0__["curry"])(function(m,r){cov_145dwii0no.f[0]++;cov_145dwii0no.s[1]++;return function(x,y){cov_145dwii0no.f[1]++;cov_145dwii0no.s[2]++;return r(x,m(y));};}));/* harmony default export */ __webpack_exports__["default"] = (mapReduce);

/***/ }),

/***/ "./src/util/sigmoid.js":
/*!*****************************!*\
  !*** ./src/util/sigmoid.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ActivationFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ActivationFunction */ "./src/ActivationFunction.js");
var cov_1tr005h9qq=function(){var path='/Volumes/BigOne/github/funml/src/util/sigmoid.js',hash='136b472592660c42f0fbdf4723b0f47e0b39f53a',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/util/sigmoid.js',statementMap:{'0':{start:{line:7,column:14},end:{line:11,column:2}},'1':{start:{line:8,column:2},end:{line:8,column:32}},'2':{start:{line:10,column:2},end:{line:10,column:21}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:7,column:37},end:{line:7,column:38}},loc:{start:{line:7,column:50},end:{line:9,column:1}},line:7},'1':{name:'(anonymous_1)',decl:{start:{line:9,column:3},end:{line:9,column:4}},loc:{start:{line:9,column:16},end:{line:11,column:1}},line:9}},branchMap:{},s:{'0':0,'1':0,'2':0},f:{'0':0,'1':0},b:{},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/util/sigmoid.js'],names:['ActivationFunction','sigmoid','x','Math','exp','y'],mappings:'AAAA,OAAOA,kBAAP,MAA+B,uBAA/B;AAEA;;;;;AAIA,IAAMC,OAAO,GAAG,IAAID,kBAAJ,CACd,UAAAE,CAAC;AAAA,SAAI,KAAK,IAAIC,IAAI,CAACC,GAAL,CAAS,CAACF,CAAV,CAAT,CAAJ;AAAA,CADa,EAEd,UAAAG,CAAC;AAAA,SAAIA,CAAC,IAAI,IAAIA,CAAR,CAAL;AAAA,CAFa,CAAhB;AAIA,eAAeJ,OAAf',sourcesContent:['import ActivationFunction from \'../ActivationFunction\'\n\n/**\n * @function sigmoid\n * @type {ActivationFunction}\n */\nconst sigmoid = new ActivationFunction(\n  x => 1 / (1 + Math.exp(-x)),\n  y => y * (1 - y)\n)\nexport default sigmoid\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var sigmoid=(cov_1tr005h9qq.s[0]++,new _ActivationFunction__WEBPACK_IMPORTED_MODULE_0__["default"](function(x){cov_1tr005h9qq.f[0]++;cov_1tr005h9qq.s[1]++;return 1/(1+Math.exp(-x));},function(y){cov_1tr005h9qq.f[1]++;cov_1tr005h9qq.s[2]++;return y*(1-y);}));/* harmony default export */ __webpack_exports__["default"] = (sigmoid);

/***/ }),

/***/ "./src/util/tanh.js":
/*!**************************!*\
  !*** ./src/util/tanh.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ActivationFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ActivationFunction */ "./src/ActivationFunction.js");
var cov_2elglj9ae7=function(){var path='/Volumes/BigOne/github/funml/src/util/tanh.js',hash='f53d758e8231aecfe3c60e86708c3e916bb83fe5',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Volumes/BigOne/github/funml/src/util/tanh.js',statementMap:{'0':{start:{line:7,column:11},end:{line:11,column:2}},'1':{start:{line:8,column:2},end:{line:8,column:22}},'2':{start:{line:10,column:2},end:{line:10,column:19}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:7,column:34},end:{line:7,column:35}},loc:{start:{line:7,column:47},end:{line:9,column:1}},line:7},'1':{name:'(anonymous_1)',decl:{start:{line:9,column:3},end:{line:9,column:4}},loc:{start:{line:9,column:16},end:{line:11,column:1}},line:9}},branchMap:{},s:{'0':0,'1':0,'2':0},f:{'0':0,'1':0},b:{},inputSourceMap:{version:3,sources:['/Volumes/BigOne/github/funml/src/util/tanh.js'],names:['ActivationFunction','tanh','x','Math','y'],mappings:'AAAA,OAAOA,kBAAP,MAA+B,uBAA/B;AAEA;;;;;AAIA,IAAMC,IAAI,GAAG,IAAID,kBAAJ,CACX,UAAAE,CAAC;AAAA,SAAIC,IAAI,CAACF,IAAL,CAAUC,CAAV,CAAJ;AAAA,CADU,EAEX,UAAAE,CAAC;AAAA,SAAI,IAAKA,CAAC,GAAGA,CAAb;AAAA,CAFU,CAAb;AAIA,eAAeH,IAAf',sourcesContent:['import ActivationFunction from \'../ActivationFunction\'\n\n/**\n * @function tanh\n * @type {ActivationFunction}\n */\nconst tanh = new ActivationFunction(\n  x => Math.tanh(x),\n  y => 1 - (y * y)\n)\nexport default tanh\n']},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var tanh=(cov_2elglj9ae7.s[0]++,new _ActivationFunction__WEBPACK_IMPORTED_MODULE_0__["default"](function(x){cov_2elglj9ae7.f[0]++;cov_2elglj9ae7.s[1]++;return Math.tanh(x);},function(y){cov_2elglj9ae7.f[1]++;cov_2elglj9ae7.s[2]++;return 1-y*y;}));/* harmony default export */ __webpack_exports__["default"] = (tanh);

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Volumes/BigOne/github/funml/src/index.js */"./src/index.js");


/***/ }),

/***/ "@astuanax/funmatrix":
/*!**************************************!*\
  !*** external "@astuanax/funmatrix" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE__astuanax_funmatrix__;

/***/ }),

/***/ "fun.js":
/*!*************************!*\
  !*** external "fun.js" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_fun_js__;

/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,